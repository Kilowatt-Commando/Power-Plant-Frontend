name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  wait-for-semantic-versioning:
    # This way we ensure that each workflow has at least one job without dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Just exit
        run: echo "Doing nothing..."

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: semantic-versioning

    env:
      REPO_NAME: ${{ github.repository }}
      NEXT_AUTH_GITHUB_ID: ${{ secrets.NEXT_AUTH_GITHUB_ID }}
      NEXT_AUTH_GITHUB_SECRET: ${{ secrets.NEXT_AUTH_GITHUB_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      DATA_API: ${{ secrets.DATA_API }}
      CONTROL_API: ${{ secrets.CONTROL_API }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name as environment variable
        run: echo "LOWER_REPO_NAME=$(echo ${{ env.REPO_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          echo "NEXT_AUTH_GITHUB_ID=${{ env.NEXT_AUTH_GITHUB_ID }}" >> .env
          echo "NEXT_AUTH_GITHUB_SECRET=${{ env.NEXT_AUTH_GITHUB_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ env.NEXTAUTH_URL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }}" >> .env
          echo "DATA_API=${{ env.DATA_API }}" >> .env
          echo "CONTROL_API=${{ env.CONTROL_API }}" >> .env

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ env.LOWER_REPO_NAME }}:latest .

      - name: Push the image
        run: docker push ghcr.io/${{ env.LOWER_REPO_NAME }}:latest

      - name: Tag Image based on current tag
        run: docker tag ghcr.io/${{ env.LOWER_REPO_NAME }}:latest ghcr.io/${{ env.LOWER_REPO_NAME }}:${{ steps.previoustag.outputs.tag }}

      - name: Push the tagged image
        run: docker push ghcr.io/${{ env.LOWER_REPO_NAME }}:${{ steps.previoustag.outputs.tag }}
        continue-on-error: true
